// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoBanco.Infrastructure.Data;

#nullable disable

namespace ProyectoBanco.Infrastructure.Migrations
{
    [DbContext(typeof(BancoInterandinoDbContext))]
    partial class BancoInterandinoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoBanco.Core.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cli_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CliApellido1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cli_Apellido1");

                    b.Property<string>("CliApellido2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cli_Apellido2");

                    b.Property<string>("CliCelular")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cli_Celular");

                    b.Property<string>("CliCiudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cli_Ciudad");

                    b.Property<string>("CliDireccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Cli_Direccion");

                    b.Property<string>("CliEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cli_Email");

                    b.Property<string>("CliIdentificacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cli_Identificacion");

                    b.Property<string>("CliNombre1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cli_Nombre1");

                    b.Property<string>("CliNombre2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cli_Nombre2");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("ProyectoBanco.Core.Entidades.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cue_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CliId")
                        .HasColumnType("int")
                        .HasColumnName("Cli_Id");

                    b.Property<bool>("CueActiva")
                        .HasColumnType("bit")
                        .HasColumnName("Cue_Activa");

                    b.Property<DateTime>("CueFechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("Cue_FechaCreacion");

                    b.Property<string>("CueNumero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cue_Numero");

                    b.Property<decimal>("CueSaldoActual")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Cue_SaldoActual");

                    b.Property<string>("CueUsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cue_UsuarioCreacion");

                    b.HasKey("Id");

                    b.HasIndex("CliId");

                    b.ToTable("Cuentas", (string)null);
                });

            modelBuilder.Entity("ProyectoBanco.Core.Entidades.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mov_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CliId")
                        .HasColumnType("int")
                        .HasColumnName("Cli_Id");

                    b.Property<int>("CueId")
                        .HasColumnType("int")
                        .HasColumnName("Cue_Id");

                    b.Property<DateTime>("MovFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("Mov_Fecha");

                    b.Property<string>("MovOrigen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Mov_Origen");

                    b.Property<string>("MovTipo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Mov_Tipo");

                    b.Property<decimal>("MovValor")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Mov_Valor");

                    b.HasKey("Id");

                    b.HasIndex("CliId");

                    b.HasIndex("CueId");

                    b.ToTable("Movimientos", (string)null);
                });

            modelBuilder.Entity("ProyectoBanco.Core.Entidades.Seguridad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Seg_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int")
                        .HasColumnName("Seg_CliId");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Seg_Rol");

                    b.Property<string>("SegContrasena")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Seg_Contrasena");

                    b.Property<string>("SegNombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Seg_NombreUsuario");

                    b.Property<string>("SegUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Seg_Usu");

                    b.HasKey("Id");

                    b.HasIndex("ClienteID")
                        .IsUnique();

                    b.ToTable("Seguridad", (string)null);
                });

            modelBuilder.Entity("ProyectoBanco.Core.Entidades.Cuenta", b =>
                {
                    b.HasOne("ProyectoBanco.Core.Entidades.Cliente", "Cli")
                        .WithMany("Cuentas")
                        .HasForeignKey("CliId")
                        .IsRequired()
                        .HasConstraintName("FK_Cuentas_Clientes");

                    b.Navigation("Cli");
                });

            modelBuilder.Entity("ProyectoBanco.Core.Entidades.Movimiento", b =>
                {
                    b.HasOne("ProyectoBanco.Core.Entidades.Cliente", "Cli")
                        .WithMany("Movimientos")
                        .HasForeignKey("CliId")
                        .IsRequired()
                        .HasConstraintName("FK_Movimientos_Clientes");

                    b.HasOne("ProyectoBanco.Core.Entidades.Cuenta", "Cue")
                        .WithMany("Movimientos")
                        .HasForeignKey("CueId")
                        .IsRequired()
                        .HasConstraintName("FK_Movimientos_Cuentas");

                    b.Navigation("Cli");

                    b.Navigation("Cue");
                });

            modelBuilder.Entity("ProyectoBanco.Core.Entidades.Seguridad", b =>
                {
                    b.HasOne("ProyectoBanco.Core.Entidades.Cliente", "Cliente")
                        .WithOne("Seguridad")
                        .HasForeignKey("ProyectoBanco.Core.Entidades.Seguridad", "ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ProyectoBanco.Core.Entidades.Cliente", b =>
                {
                    b.Navigation("Cuentas");

                    b.Navigation("Movimientos");

                    b.Navigation("Seguridad")
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoBanco.Core.Entidades.Cuenta", b =>
                {
                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
